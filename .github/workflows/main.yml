name: 'Financial Reporting Q&A Chat Bot Build'
on: 
  push:
    branches:
      - 'main'
jobs:
  build-images-and-push-container-registry:
    environment: DEVELOPMENT
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@main

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Make env file that will be used in the docker build'
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_QNA_API_ENDPOINT: ${{ vars.QNA_API_ENDPOINT }}
        envkey_AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
        envkey_AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
        envkey_AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY}}
        envkey_AZURE_OPENAI_DEPLOYMENT_NAME: ${{ vars.AZURE_OPENAI_DEPLOYMENT_NAME}}
        envkey_AZURE_AI_SEARCH_ENDPOINT: ${{ vars.AZURE_AI_SEARCH_ENDPOINT}}
        envkey_AZURE_AI_SEARCH_KEY: ${{ secrets.AZURE_AI_SEARCH_KEY }}
        envkey_AZURE_AI_SEARCH_INDEX_NAME: ${{ vars.AZURE_AI_SEARCH_INDEX_NAME }}
        envkey_AZURE_AI_EMBEDDING_DEPLOYMENT_NAME: ${{ vars.AZURE_AI_EMBEDDING_DEPLOYMENT_NAME}}
        envkey_AZURE_OPENAI_MODEL_VERSION: ${{ vars.AZURE_OPENAI_MODEL_VERSION}}
        envkey_LANGCHAIN_TRACING_V2: ${{ vars.LANGCHAIN_TRACING_V2 }}
        envkey_LANGCHAIN_ENDPOINT: ${{ vars.LANGCHAIN_ENDPOINT }}
        envkey_LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
        envkey_LANGCHAIN_PROJECT: ${{ vars.LANGCHAIN_PROJECT }}
        envkey_DEBUG: ${{ vars.DEBUG}}
        envkey_ENABLE_LANGCHAIN_PLAYGROUND: ${{ vars.ENABLE_LANGCHAIN_PLAYGROUND }}
        envkey_COMPANY_NAME: ${{ vars.COMPANY_NAME }}
        envkey_COMPANY_EMAIL_ADDRESS: ${{ vars.COMPANY_EMAIL_ADDRESS }}
        envkey_AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT: ${{ vars.AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT }}
        envkey_AZURE_DOCUMENT_INTELLIGENCE_KEY: ${{ secrets.AZURE_DOCUMENT_INTELLIGENCE_KEY }}
        envkey_AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT: ${{ vars.AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT }}
        envkey_AZURE_STORAGE_ACCOUNT_NAME: ${{ vars.AZURE_STORAGE_ACCOUNT_NAME }}
        envkey_AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
        envkey_AZURE_STORAGE_CONTAINER_NAME: ${{ vars.AZURE_STORAGE_CONTAINER_NAME }}
        envkey_AZURE_COSMOSDB_CONNECTIONSTRING: ${{ secrets.AZURE_COSMOSDB_CONNECTIONSTRING }}
        envkey_AZURE_COSMOSDB_DATABASE_NAME: ${{ vars.AZURE_COSMOSDB_DATABASE_NAME }}
        envkey_AZURE_COSMOSDB_COLLECTION_NAME: ${{ vars.AZURE_COSMOSDB_COLLECTION_NAME }}
        envkey_DOWNLOAD_ROOT_PATH: ${{ vars.DOWNLOAD_ROOT_PATH }}
        envkey_TIMEZONE: ${{ vars.TIMEZONE}}
        envkey_AZURE_OPENAI_DEPLOYMENT: ${{ vars.AZURE_OPENAI_DEPLOYMENT }}
        directory: ./
        file_name: .env

    - name: 'Login to Container Registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ vars.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: 'Build the Financial Reporting Q&A API Docker Container'
      run: |
        TAG=${{ github.sha }} REGISTRY=${{ vars.REGISTRY_LOGIN_SERVER }} docker-compose build
    - name: 'Push the Financial Reporting Q&A API Docker Container'
      run: |
        docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/financialreportingqnaapi:${{ github.sha }}
    - name: 'Push the Financial Reporting Q&A Chat Interface Docker Container'
      run: |
        docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/financialreportingqnachat:${{ github.sha }}
    - name: 'Push the Financial Reporting Q&A Chat Integration Docker Container'
      run: |
        docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/financialreportingqnaintegration:${{ github.sha }}
