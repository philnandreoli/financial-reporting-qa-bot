name: 'Financial Reporting Q&A Chat Bot Build'
on: 
  push:
    branches:
      - 'main'
      
jobs:
  build-images-and-push-container-registry:
    environment: DEVELOPMENT
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@main

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Login to Container Registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ vars.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: 'Build the Financial Reporting Q&A API Docker Container'
      run: |
        TAG=${{ github.sha }} \
        REGISTRY=${{ vars.REGISTRY_LOGIN_SERVER }} \
        AZURE_OPENAI_API_VERSION=${{vars.AZURE_OPENAI_API_VERSION }} \
        AZURE_OPENAI_ENDPOINT=${{ vars.AZURE_OPENAI_ENDPOINT }} \
        AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }} \
        AZURE_OPENAI_DEPLOYMENT_NAME=${{ vars.AZURE_OPENAI_DEPLOYMENT_NAME }} \
        AZURE_AI_SEARCH_ENDPOINT=${{ vars.AZURE_AI_SEARCH_ENDPOINT }} \
        AZURE_AI_SEARCH_KEY=${{ secrets.AZURE_AI_SEARCH_KEY }} \
        AZURE_AI_SEARCH_INDEX_NAME=${{ vars.AZURE_AI_SEARCH_INDEX_NAME }} \
        AZURE_AI_EMBEDDING_DEPLOYMENT_NAME=${{ vars.AZURE_AI_EMBEDDING_DEPLOYMENT_NAME }} \
        AZURE_OPENAI_MODEL_VERSION=${{ vars.AZURE_OPENAI_MODEL_VERSION }} \
        LANGCHAIN_TRACING_V2=${{ vars.LANGCHAIN_TRACING_V2 }} \
        LANGCHAIN_ENDPOINT=${{ vars.LANGCHAIN_ENDPOINT }} \
        LANGCHAIN_API_KEY=${{ secrets.LANGCHAIN_API_KEY }} \
        LANGCHAIN_PROJECT=${{ vars.LANGCHAIN_PROJECT }} \
        DEBUG=${{ vars.DEBUG }} \
        ENABLE_LANGCHAIN_PLAYGROUND=${{ vars.ENABLE_LANGCHAIN_PLAYGROUND }} \
        COMPANY_NAME=${{ vars.COMPANY_NAME }} \
        COMPANY_EMAIL_ADDRESS=${{ vars.COMPANY_EMAIL_ADDRESS }} \
        AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT=${{ vars.AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT }} \
        AZURE_DOCUMENT_INTELLIGENCE_KEY=${{ secrets.AZURE_DOCUMENT_INTELLIGENCE_KEY }} \
        AZURE_AI_SEARCH_ENDPOINT=${{ vars.AZURE_AI_SEARCH_ENDPOINT }} \
        AZURE_AI_SEARCH_KEY=${{ secrets.AZURE_AI_SEARCH_KEY }} \
        AZURE_AI_SEARCH_INDEX_NAME=${{ vars.AZURE_AI_SEARCH_INDEX_NAME }} \
        AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT=${{ vars.AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT }} \
        AZURE_OPENAI_ENDPOINT=${{ vars.AZURE_OPENAI_ENDPOINT }} \
        AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }} \
        AZURE_OPENAI_API_VERSION=${{ vars.AZURE_OPENAI_API_VERSION }} \
        AZURE_STORAGE_ACCOUNT_NAME=${{ vars.AZURE_STORAGE_ACCOUNT_NAME }} \
        AZURE_STORAGE_ACCOUNT_KEY=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} \
        AZURE_STORAGE_CONTAINER_NAME=${{ vars.AZURE_STORAGE_CONTAINER_NAME }} \
        AZURE_COSMOSDB_CONNECTIONSTRING=${{ secrets.AZURE_COSMOSDB_CONNECTIONSTRING }} \
        AZURE_COSMOSDB_DATABASE_NAME=${{ vars.AZURE_COSMOSDB_DATABASE_NAME }} \
        AZURE_COSMOSDB_COLLECTION_NAME=${{ vars.AZURE_COSMOSDB_COLLECTION_NAME }} \
        DOWNLOAD_ROOT_PATH=${{ vars.DOWNLOAD_ROOT_PATH }} \
        TIMEZONE=${{ vars.TIMEZONE }} \
        QNA_API_ENDPOINT=${{ vars.QNA_API_ENDPOINT }} \
        docker-compose build
    - name: 'Push the Financial Reporting Q&A API Docker Container'
      run: |
        docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/financialreportingqnaapi:${{ github.sha }}
    - name: 'Push the Financial Reporting Q&A Chat Interface Docker Container'
      run: |
        docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/financialreportingqnachat:${{ github.sha }}
    - name: 'Push the Financial Reporting Q&A Chat Integration Docker Container'
      run: |
        docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/financialreportingqnaintegration:${{ github.sha }}
